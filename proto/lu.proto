syntax = "proto2";

package lu_net;

message Datum {
    optional int32 channels = 1;
    optional int32 height = 2;
    optional int32 width = 3;
    // the actual image data, in bytes
    optional bytes data = 4;
    optional int32 label = 5;
    // Optionally, the datum could also hold float data.
    repeated float float_data = 6;
    // If true data contains an encoded image that need to be decoded
    optional bool encoded = 7 [default = false];
}

message NetParameterMsg {
    repeated int32 layers_neuron_num = 1 [packed=true];
}

message ModelMsg {
    optional float learning_rate = 1;
    optional NetParameterMsg net_param = 2;
}

//eigen matrix
message MatrixMsg {
    required uint32 rows = 1;
    // columns deduced by division. Data stored as column major
    repeated float data = 2 [packed=true];
}

//eigen vector
message VectorMsg {
    repeated float data = 1 [packed=true];
}

message WeightsMsg {
    repeated MatrixMsg weights = 2;
    repeated VectorMsg bias = 3;
}

message ModelWeightsMsg{
    optional ModelMsg model = 1;
    optional WeightsMsg weights = 2;
}