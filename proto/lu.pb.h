// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lu.proto

#ifndef PROTOBUF_lu_2eproto__INCLUDED
#define PROTOBUF_lu_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace lu_net {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_lu_2eproto();
void protobuf_AssignDesc_lu_2eproto();
void protobuf_ShutdownFile_lu_2eproto();

class MatrixMsg;
class ModelMsg;
class ModelWeightsMsg;
class NetParameterMsg;
class VectorMsg;
class WeightsMsg;

// ===================================================================

class NetParameterMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lu_net.NetParameterMsg) */ {
 public:
  NetParameterMsg();
  virtual ~NetParameterMsg();

  NetParameterMsg(const NetParameterMsg& from);

  inline NetParameterMsg& operator=(const NetParameterMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetParameterMsg& default_instance();

  void Swap(NetParameterMsg* other);

  // implements Message ----------------------------------------------

  inline NetParameterMsg* New() const { return New(NULL); }

  NetParameterMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetParameterMsg& from);
  void MergeFrom(const NetParameterMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NetParameterMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 layers_neuron_num = 1 [packed = true];
  int layers_neuron_num_size() const;
  void clear_layers_neuron_num();
  static const int kLayersNeuronNumFieldNumber = 1;
  ::google::protobuf::int32 layers_neuron_num(int index) const;
  void set_layers_neuron_num(int index, ::google::protobuf::int32 value);
  void add_layers_neuron_num(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      layers_neuron_num() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_layers_neuron_num();

  // @@protoc_insertion_point(class_scope:lu_net.NetParameterMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > layers_neuron_num_;
  mutable int _layers_neuron_num_cached_byte_size_;
  friend void  protobuf_AddDesc_lu_2eproto();
  friend void protobuf_AssignDesc_lu_2eproto();
  friend void protobuf_ShutdownFile_lu_2eproto();

  void InitAsDefaultInstance();
  static NetParameterMsg* default_instance_;
};
// -------------------------------------------------------------------

class ModelMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lu_net.ModelMsg) */ {
 public:
  ModelMsg();
  virtual ~ModelMsg();

  ModelMsg(const ModelMsg& from);

  inline ModelMsg& operator=(const ModelMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelMsg& default_instance();

  void Swap(ModelMsg* other);

  // implements Message ----------------------------------------------

  inline ModelMsg* New() const { return New(NULL); }

  ModelMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelMsg& from);
  void MergeFrom(const ModelMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float learning_rate = 1;
  bool has_learning_rate() const;
  void clear_learning_rate();
  static const int kLearningRateFieldNumber = 1;
  float learning_rate() const;
  void set_learning_rate(float value);

  // optional .lu_net.NetParameterMsg net_param = 2;
  bool has_net_param() const;
  void clear_net_param();
  static const int kNetParamFieldNumber = 2;
  const ::lu_net::NetParameterMsg& net_param() const;
  ::lu_net::NetParameterMsg* mutable_net_param();
  ::lu_net::NetParameterMsg* release_net_param();
  void set_allocated_net_param(::lu_net::NetParameterMsg* net_param);

  // @@protoc_insertion_point(class_scope:lu_net.ModelMsg)
 private:
  inline void set_has_learning_rate();
  inline void clear_has_learning_rate();
  inline void set_has_net_param();
  inline void clear_has_net_param();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::lu_net::NetParameterMsg* net_param_;
  float learning_rate_;
  friend void  protobuf_AddDesc_lu_2eproto();
  friend void protobuf_AssignDesc_lu_2eproto();
  friend void protobuf_ShutdownFile_lu_2eproto();

  void InitAsDefaultInstance();
  static ModelMsg* default_instance_;
};
// -------------------------------------------------------------------

class MatrixMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lu_net.MatrixMsg) */ {
 public:
  MatrixMsg();
  virtual ~MatrixMsg();

  MatrixMsg(const MatrixMsg& from);

  inline MatrixMsg& operator=(const MatrixMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MatrixMsg& default_instance();

  void Swap(MatrixMsg* other);

  // implements Message ----------------------------------------------

  inline MatrixMsg* New() const { return New(NULL); }

  MatrixMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MatrixMsg& from);
  void MergeFrom(const MatrixMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MatrixMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 rows = 1;
  bool has_rows() const;
  void clear_rows();
  static const int kRowsFieldNumber = 1;
  ::google::protobuf::uint32 rows() const;
  void set_rows(::google::protobuf::uint32 value);

  // repeated float data = 2 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:lu_net.MatrixMsg)
 private:
  inline void set_has_rows();
  inline void clear_has_rows();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > data_;
  mutable int _data_cached_byte_size_;
  ::google::protobuf::uint32 rows_;
  friend void  protobuf_AddDesc_lu_2eproto();
  friend void protobuf_AssignDesc_lu_2eproto();
  friend void protobuf_ShutdownFile_lu_2eproto();

  void InitAsDefaultInstance();
  static MatrixMsg* default_instance_;
};
// -------------------------------------------------------------------

class VectorMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lu_net.VectorMsg) */ {
 public:
  VectorMsg();
  virtual ~VectorMsg();

  VectorMsg(const VectorMsg& from);

  inline VectorMsg& operator=(const VectorMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VectorMsg& default_instance();

  void Swap(VectorMsg* other);

  // implements Message ----------------------------------------------

  inline VectorMsg* New() const { return New(NULL); }

  VectorMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VectorMsg& from);
  void MergeFrom(const VectorMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(VectorMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float data = 1 [packed = true];
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:lu_net.VectorMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > data_;
  mutable int _data_cached_byte_size_;
  friend void  protobuf_AddDesc_lu_2eproto();
  friend void protobuf_AssignDesc_lu_2eproto();
  friend void protobuf_ShutdownFile_lu_2eproto();

  void InitAsDefaultInstance();
  static VectorMsg* default_instance_;
};
// -------------------------------------------------------------------

class WeightsMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lu_net.WeightsMsg) */ {
 public:
  WeightsMsg();
  virtual ~WeightsMsg();

  WeightsMsg(const WeightsMsg& from);

  inline WeightsMsg& operator=(const WeightsMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WeightsMsg& default_instance();

  void Swap(WeightsMsg* other);

  // implements Message ----------------------------------------------

  inline WeightsMsg* New() const { return New(NULL); }

  WeightsMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WeightsMsg& from);
  void MergeFrom(const WeightsMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WeightsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .lu_net.MatrixMsg weights = 2;
  int weights_size() const;
  void clear_weights();
  static const int kWeightsFieldNumber = 2;
  const ::lu_net::MatrixMsg& weights(int index) const;
  ::lu_net::MatrixMsg* mutable_weights(int index);
  ::lu_net::MatrixMsg* add_weights();
  ::google::protobuf::RepeatedPtrField< ::lu_net::MatrixMsg >*
      mutable_weights();
  const ::google::protobuf::RepeatedPtrField< ::lu_net::MatrixMsg >&
      weights() const;

  // repeated .lu_net.VectorMsg bias = 3;
  int bias_size() const;
  void clear_bias();
  static const int kBiasFieldNumber = 3;
  const ::lu_net::VectorMsg& bias(int index) const;
  ::lu_net::VectorMsg* mutable_bias(int index);
  ::lu_net::VectorMsg* add_bias();
  ::google::protobuf::RepeatedPtrField< ::lu_net::VectorMsg >*
      mutable_bias();
  const ::google::protobuf::RepeatedPtrField< ::lu_net::VectorMsg >&
      bias() const;

  // @@protoc_insertion_point(class_scope:lu_net.WeightsMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::lu_net::MatrixMsg > weights_;
  ::google::protobuf::RepeatedPtrField< ::lu_net::VectorMsg > bias_;
  friend void  protobuf_AddDesc_lu_2eproto();
  friend void protobuf_AssignDesc_lu_2eproto();
  friend void protobuf_ShutdownFile_lu_2eproto();

  void InitAsDefaultInstance();
  static WeightsMsg* default_instance_;
};
// -------------------------------------------------------------------

class ModelWeightsMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:lu_net.ModelWeightsMsg) */ {
 public:
  ModelWeightsMsg();
  virtual ~ModelWeightsMsg();

  ModelWeightsMsg(const ModelWeightsMsg& from);

  inline ModelWeightsMsg& operator=(const ModelWeightsMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelWeightsMsg& default_instance();

  void Swap(ModelWeightsMsg* other);

  // implements Message ----------------------------------------------

  inline ModelWeightsMsg* New() const { return New(NULL); }

  ModelWeightsMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelWeightsMsg& from);
  void MergeFrom(const ModelWeightsMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelWeightsMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .lu_net.ModelMsg model = 1;
  bool has_model() const;
  void clear_model();
  static const int kModelFieldNumber = 1;
  const ::lu_net::ModelMsg& model() const;
  ::lu_net::ModelMsg* mutable_model();
  ::lu_net::ModelMsg* release_model();
  void set_allocated_model(::lu_net::ModelMsg* model);

  // optional .lu_net.WeightsMsg weights = 2;
  bool has_weights() const;
  void clear_weights();
  static const int kWeightsFieldNumber = 2;
  const ::lu_net::WeightsMsg& weights() const;
  ::lu_net::WeightsMsg* mutable_weights();
  ::lu_net::WeightsMsg* release_weights();
  void set_allocated_weights(::lu_net::WeightsMsg* weights);

  // @@protoc_insertion_point(class_scope:lu_net.ModelWeightsMsg)
 private:
  inline void set_has_model();
  inline void clear_has_model();
  inline void set_has_weights();
  inline void clear_has_weights();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::lu_net::ModelMsg* model_;
  ::lu_net::WeightsMsg* weights_;
  friend void  protobuf_AddDesc_lu_2eproto();
  friend void protobuf_AssignDesc_lu_2eproto();
  friend void protobuf_ShutdownFile_lu_2eproto();

  void InitAsDefaultInstance();
  static ModelWeightsMsg* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NetParameterMsg

// repeated int32 layers_neuron_num = 1 [packed = true];
inline int NetParameterMsg::layers_neuron_num_size() const {
  return layers_neuron_num_.size();
}
inline void NetParameterMsg::clear_layers_neuron_num() {
  layers_neuron_num_.Clear();
}
inline ::google::protobuf::int32 NetParameterMsg::layers_neuron_num(int index) const {
  // @@protoc_insertion_point(field_get:lu_net.NetParameterMsg.layers_neuron_num)
  return layers_neuron_num_.Get(index);
}
inline void NetParameterMsg::set_layers_neuron_num(int index, ::google::protobuf::int32 value) {
  layers_neuron_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:lu_net.NetParameterMsg.layers_neuron_num)
}
inline void NetParameterMsg::add_layers_neuron_num(::google::protobuf::int32 value) {
  layers_neuron_num_.Add(value);
  // @@protoc_insertion_point(field_add:lu_net.NetParameterMsg.layers_neuron_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NetParameterMsg::layers_neuron_num() const {
  // @@protoc_insertion_point(field_list:lu_net.NetParameterMsg.layers_neuron_num)
  return layers_neuron_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NetParameterMsg::mutable_layers_neuron_num() {
  // @@protoc_insertion_point(field_mutable_list:lu_net.NetParameterMsg.layers_neuron_num)
  return &layers_neuron_num_;
}

// -------------------------------------------------------------------

// ModelMsg

// optional float learning_rate = 1;
inline bool ModelMsg::has_learning_rate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModelMsg::set_has_learning_rate() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModelMsg::clear_has_learning_rate() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModelMsg::clear_learning_rate() {
  learning_rate_ = 0;
  clear_has_learning_rate();
}
inline float ModelMsg::learning_rate() const {
  // @@protoc_insertion_point(field_get:lu_net.ModelMsg.learning_rate)
  return learning_rate_;
}
inline void ModelMsg::set_learning_rate(float value) {
  set_has_learning_rate();
  learning_rate_ = value;
  // @@protoc_insertion_point(field_set:lu_net.ModelMsg.learning_rate)
}

// optional .lu_net.NetParameterMsg net_param = 2;
inline bool ModelMsg::has_net_param() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModelMsg::set_has_net_param() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModelMsg::clear_has_net_param() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModelMsg::clear_net_param() {
  if (net_param_ != NULL) net_param_->::lu_net::NetParameterMsg::Clear();
  clear_has_net_param();
}
inline const ::lu_net::NetParameterMsg& ModelMsg::net_param() const {
  // @@protoc_insertion_point(field_get:lu_net.ModelMsg.net_param)
  return net_param_ != NULL ? *net_param_ : *default_instance_->net_param_;
}
inline ::lu_net::NetParameterMsg* ModelMsg::mutable_net_param() {
  set_has_net_param();
  if (net_param_ == NULL) {
    net_param_ = new ::lu_net::NetParameterMsg;
  }
  // @@protoc_insertion_point(field_mutable:lu_net.ModelMsg.net_param)
  return net_param_;
}
inline ::lu_net::NetParameterMsg* ModelMsg::release_net_param() {
  // @@protoc_insertion_point(field_release:lu_net.ModelMsg.net_param)
  clear_has_net_param();
  ::lu_net::NetParameterMsg* temp = net_param_;
  net_param_ = NULL;
  return temp;
}
inline void ModelMsg::set_allocated_net_param(::lu_net::NetParameterMsg* net_param) {
  delete net_param_;
  net_param_ = net_param;
  if (net_param) {
    set_has_net_param();
  } else {
    clear_has_net_param();
  }
  // @@protoc_insertion_point(field_set_allocated:lu_net.ModelMsg.net_param)
}

// -------------------------------------------------------------------

// MatrixMsg

// required uint32 rows = 1;
inline bool MatrixMsg::has_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MatrixMsg::set_has_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MatrixMsg::clear_has_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MatrixMsg::clear_rows() {
  rows_ = 0u;
  clear_has_rows();
}
inline ::google::protobuf::uint32 MatrixMsg::rows() const {
  // @@protoc_insertion_point(field_get:lu_net.MatrixMsg.rows)
  return rows_;
}
inline void MatrixMsg::set_rows(::google::protobuf::uint32 value) {
  set_has_rows();
  rows_ = value;
  // @@protoc_insertion_point(field_set:lu_net.MatrixMsg.rows)
}

// repeated float data = 2 [packed = true];
inline int MatrixMsg::data_size() const {
  return data_.size();
}
inline void MatrixMsg::clear_data() {
  data_.Clear();
}
inline float MatrixMsg::data(int index) const {
  // @@protoc_insertion_point(field_get:lu_net.MatrixMsg.data)
  return data_.Get(index);
}
inline void MatrixMsg::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:lu_net.MatrixMsg.data)
}
inline void MatrixMsg::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:lu_net.MatrixMsg.data)
}
inline const ::google::protobuf::RepeatedField< float >&
MatrixMsg::data() const {
  // @@protoc_insertion_point(field_list:lu_net.MatrixMsg.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
MatrixMsg::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:lu_net.MatrixMsg.data)
  return &data_;
}

// -------------------------------------------------------------------

// VectorMsg

// repeated float data = 1 [packed = true];
inline int VectorMsg::data_size() const {
  return data_.size();
}
inline void VectorMsg::clear_data() {
  data_.Clear();
}
inline float VectorMsg::data(int index) const {
  // @@protoc_insertion_point(field_get:lu_net.VectorMsg.data)
  return data_.Get(index);
}
inline void VectorMsg::set_data(int index, float value) {
  data_.Set(index, value);
  // @@protoc_insertion_point(field_set:lu_net.VectorMsg.data)
}
inline void VectorMsg::add_data(float value) {
  data_.Add(value);
  // @@protoc_insertion_point(field_add:lu_net.VectorMsg.data)
}
inline const ::google::protobuf::RepeatedField< float >&
VectorMsg::data() const {
  // @@protoc_insertion_point(field_list:lu_net.VectorMsg.data)
  return data_;
}
inline ::google::protobuf::RepeatedField< float >*
VectorMsg::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:lu_net.VectorMsg.data)
  return &data_;
}

// -------------------------------------------------------------------

// WeightsMsg

// repeated .lu_net.MatrixMsg weights = 2;
inline int WeightsMsg::weights_size() const {
  return weights_.size();
}
inline void WeightsMsg::clear_weights() {
  weights_.Clear();
}
inline const ::lu_net::MatrixMsg& WeightsMsg::weights(int index) const {
  // @@protoc_insertion_point(field_get:lu_net.WeightsMsg.weights)
  return weights_.Get(index);
}
inline ::lu_net::MatrixMsg* WeightsMsg::mutable_weights(int index) {
  // @@protoc_insertion_point(field_mutable:lu_net.WeightsMsg.weights)
  return weights_.Mutable(index);
}
inline ::lu_net::MatrixMsg* WeightsMsg::add_weights() {
  // @@protoc_insertion_point(field_add:lu_net.WeightsMsg.weights)
  return weights_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::lu_net::MatrixMsg >*
WeightsMsg::mutable_weights() {
  // @@protoc_insertion_point(field_mutable_list:lu_net.WeightsMsg.weights)
  return &weights_;
}
inline const ::google::protobuf::RepeatedPtrField< ::lu_net::MatrixMsg >&
WeightsMsg::weights() const {
  // @@protoc_insertion_point(field_list:lu_net.WeightsMsg.weights)
  return weights_;
}

// repeated .lu_net.VectorMsg bias = 3;
inline int WeightsMsg::bias_size() const {
  return bias_.size();
}
inline void WeightsMsg::clear_bias() {
  bias_.Clear();
}
inline const ::lu_net::VectorMsg& WeightsMsg::bias(int index) const {
  // @@protoc_insertion_point(field_get:lu_net.WeightsMsg.bias)
  return bias_.Get(index);
}
inline ::lu_net::VectorMsg* WeightsMsg::mutable_bias(int index) {
  // @@protoc_insertion_point(field_mutable:lu_net.WeightsMsg.bias)
  return bias_.Mutable(index);
}
inline ::lu_net::VectorMsg* WeightsMsg::add_bias() {
  // @@protoc_insertion_point(field_add:lu_net.WeightsMsg.bias)
  return bias_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::lu_net::VectorMsg >*
WeightsMsg::mutable_bias() {
  // @@protoc_insertion_point(field_mutable_list:lu_net.WeightsMsg.bias)
  return &bias_;
}
inline const ::google::protobuf::RepeatedPtrField< ::lu_net::VectorMsg >&
WeightsMsg::bias() const {
  // @@protoc_insertion_point(field_list:lu_net.WeightsMsg.bias)
  return bias_;
}

// -------------------------------------------------------------------

// ModelWeightsMsg

// optional .lu_net.ModelMsg model = 1;
inline bool ModelWeightsMsg::has_model() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModelWeightsMsg::set_has_model() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModelWeightsMsg::clear_has_model() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModelWeightsMsg::clear_model() {
  if (model_ != NULL) model_->::lu_net::ModelMsg::Clear();
  clear_has_model();
}
inline const ::lu_net::ModelMsg& ModelWeightsMsg::model() const {
  // @@protoc_insertion_point(field_get:lu_net.ModelWeightsMsg.model)
  return model_ != NULL ? *model_ : *default_instance_->model_;
}
inline ::lu_net::ModelMsg* ModelWeightsMsg::mutable_model() {
  set_has_model();
  if (model_ == NULL) {
    model_ = new ::lu_net::ModelMsg;
  }
  // @@protoc_insertion_point(field_mutable:lu_net.ModelWeightsMsg.model)
  return model_;
}
inline ::lu_net::ModelMsg* ModelWeightsMsg::release_model() {
  // @@protoc_insertion_point(field_release:lu_net.ModelWeightsMsg.model)
  clear_has_model();
  ::lu_net::ModelMsg* temp = model_;
  model_ = NULL;
  return temp;
}
inline void ModelWeightsMsg::set_allocated_model(::lu_net::ModelMsg* model) {
  delete model_;
  model_ = model;
  if (model) {
    set_has_model();
  } else {
    clear_has_model();
  }
  // @@protoc_insertion_point(field_set_allocated:lu_net.ModelWeightsMsg.model)
}

// optional .lu_net.WeightsMsg weights = 2;
inline bool ModelWeightsMsg::has_weights() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModelWeightsMsg::set_has_weights() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModelWeightsMsg::clear_has_weights() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModelWeightsMsg::clear_weights() {
  if (weights_ != NULL) weights_->::lu_net::WeightsMsg::Clear();
  clear_has_weights();
}
inline const ::lu_net::WeightsMsg& ModelWeightsMsg::weights() const {
  // @@protoc_insertion_point(field_get:lu_net.ModelWeightsMsg.weights)
  return weights_ != NULL ? *weights_ : *default_instance_->weights_;
}
inline ::lu_net::WeightsMsg* ModelWeightsMsg::mutable_weights() {
  set_has_weights();
  if (weights_ == NULL) {
    weights_ = new ::lu_net::WeightsMsg;
  }
  // @@protoc_insertion_point(field_mutable:lu_net.ModelWeightsMsg.weights)
  return weights_;
}
inline ::lu_net::WeightsMsg* ModelWeightsMsg::release_weights() {
  // @@protoc_insertion_point(field_release:lu_net.ModelWeightsMsg.weights)
  clear_has_weights();
  ::lu_net::WeightsMsg* temp = weights_;
  weights_ = NULL;
  return temp;
}
inline void ModelWeightsMsg::set_allocated_weights(::lu_net::WeightsMsg* weights) {
  delete weights_;
  weights_ = weights;
  if (weights) {
    set_has_weights();
  } else {
    clear_has_weights();
  }
  // @@protoc_insertion_point(field_set_allocated:lu_net.ModelWeightsMsg.weights)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace lu_net

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_lu_2eproto__INCLUDED
